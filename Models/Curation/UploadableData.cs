using System;
using System.Collections.Generic;
using System.Text;

using SM = Models.Schema;
using Newtonsoft.Json.Linq;

namespace Models.Curation
{
	//Data initially sent to the server for preprocessing
	[Serializable]
	public class UploadableData
	{
		public UploadableData()
		{
			RatingContext = new List<SM.RatingContext>();
			BilletTitle = new List<SM.BilletTitle>();
			Course = new List<SM.Course>();
			Organization = new List<SM.Organization>();
			RatingTask = new List<SM.RatingTask>();
			ReferenceResource = new List<SM.ReferenceResource>();
			TrainingTask = new List<SM.TrainingTask>();
			CourseContext = new List<SM.CourseContext>();
			WorkRole = new List<SM.WorkRole>();
			ClusterAnalysis = new List<SM.ClusterAnalysis>();
			ClusterAnalysisTitle = new List<SM.ClusterAnalysisTitle>();
		}

		public List<SM.RatingContext> RatingContext { get; set; }
		public List<SM.BilletTitle> BilletTitle { get; set; }
		public List<SM.Course> Course { get; set; }
		public List<SM.Organization> Organization { get; set; }
		public List<SM.RatingTask> RatingTask { get; set; }
		//source
		public List<SM.ReferenceResource> ReferenceResource { get; set; }
		public List<SM.TrainingTask> TrainingTask { get; set; }
		public List<SM.CourseContext> CourseContext { get; set; }
		public List<SM.WorkRole> WorkRole { get; set; }
		//NOTE this may just be embedded in rating task
		public List<SM.ClusterAnalysis> ClusterAnalysis { get; set; }
		public List<SM.ClusterAnalysisTitle> ClusterAnalysisTitle { get; set; }
	}
	//

	public class UploadableTable
	{
		public UploadableTable()
		{
			Rows = new List<UploadableRow>();
		}

		public List<UploadableRow> Rows { get; set; }
		public string RawCSV { get; set; }
	}
	public class UploadableRow
	{
		/// <summary>
		/// 0-based index automatically generated by loops for a set of non-header rows
		/// </summary>
		public int Row_Index { get; set; }
		public string Row_CodedNotation { get; set; }
		public string Row_Identifier { get; set; }
		public string Rating_CodedNotation { get; set; }
		public string PayGradeType_CodedNotation { get; set; }
		public string Level_Name { get; set; }
		public string BilletTitle_Name { get; set; }
		public string WorkRole_Name { get; set; }
		public string ReferenceResource_Name { get; set; }
		public string ReferenceResource_PublicationDate { get; set; }
		public string Shared_ReferenceType { get; set; }
		public string RatingTask_Description { get; set; }
		public string RatingTask_ApplicabilityType_Name { get; set; }
		public string RatingTask_TrainingGapType_Name { get; set; }

		public string Course_CodedNotation { get; set; }
		public string Course_Name { get; set; }
		public string Course_CourseType_Name { get; set; }
		public string Course_LifeCycleControlDocumentType_CodedNotation { get; set; }
		public string Course_CurriculumControlAuthority_Name { get; set; }
		public string TrainingTask_Description { get; set; }
		public string Course_AssessmentMethodType_Name { get; set; }
		public string Notes { get; set; }


		public string Training_Solution_Type { get; set; }
		public string Cluster_Analysis_Title { get; set; }
		public string Recommended_Modality { get; set; }
		public string Development_Specification { get; set; }
		public string Candidate_Platform { get; set; }
		public string CFM_Placement { get; set; }
		public string Priority_Placement { get; set; }
		public string Development_Ratio { get; set; }
		public string Estimated_Instructional_Time { get; set; }
		public string Development_Time { get; set; }
		
		public string Cluster_Analysis_Notes { get; set; }

	}
	//

	//Used for row-by-row uploads
	public class UploadableItem
	{
		public UploadableRow Row { get; set; }
		public Guid TransactionGUID { get; set; }
		public Guid RatingRowID { get; set; }
		public string RawCSV { get; set; } //Only used on the last request, where the raw CSV is sent
		public bool SkipPart2Checks { get; set; }
		public bool SkipPart3Checks { get; set; }
	}

	//Response for row-by-row uploads
	public class UploadableItemResult
	{
		public UploadableItemResult()
		{
			NewItems = new List<JObject>();
			Additions = new List<Triple>();
			Removals = new List<Triple>();
			ValueChanges = new List<Triple>();
			Valid = true;
			Errors = new List<string>();
			Warnings = new List<string>();
			ExistingItems = new List<JObject>();
			RowItems = new List<Guid>();
			ReferenceChanges = new List<Triple>();
		}

		public List<JObject> NewItems { get; set; }
		public List<JObject> ExistingItems { get; set; }
		public List<Triple> Additions { get; set; }
		public List<Triple> Removals { get; set; }
		public List<Triple> ValueChanges { get; set; }
		public List<Triple> ReferenceChanges { get; set; }
		public bool Valid { get; set; }
		public string Message { get; set; }
		public List<string> Errors { get; set; }
		public List<string> Warnings { get; set; }
		public List<Guid> RowItems { get; set; }
	}
	//

	public class Triple
	{
		public Triple() { }
		public Triple( Guid subjectGUID, string predicate, Guid objectGUID )
		{
			Subject = subjectGUID;
			Predicate = predicate;
			Object = objectGUID;
		}
		public Triple( Guid subjectGUID, string predicate, string objectText )
		{
			Subject = subjectGUID;
			Predicate = predicate;
			ObjectText = objectText;
		}

		public Guid Subject { get; set; }
		public string Predicate { get; set; }
		public Guid Object { get; set; }
		public string ObjectText { get; set; }
	}
	//

}
