@using Models.Schema;
@using Models.DTO;
@using Models.Search;
@model BilletTitle
@{
	ViewBag.Title = "Billet Title: " + Model.Name;
}

@Html.Partial( "~/Views/Shared/_DetailBasicInfo.cshtml", new DetailBasicInfoHelper( Model )
{
	TypeLabel = "Billet Title",
	Name = Model.Name,
	PropertyList = new List<NamedString>()
	{
		new NamedString( "Description", Model.Description )
	}
} )

@Html.Partial( "~/Views/Shared/_TasksBySourceType.cshtml", new TasksBySourceTypeConfig( "for this Billet Title", "for this Billet Title", new List<SearchFilter>() { 
	new SearchFilter()
	{
		Name = "> BilletTitleId > Job",
		ItemIds = new List<int>(){ Model.Id }
	}
} ) )

@*
@Html.Partial( "~/Views/Shared/_RatingTaskCountBySourceTypeTable.cshtml", new List<SearchFilter>()
{
	new SearchFilter()
	{
		Name = "> BilletTitleId > Job",
		ItemIds = new List<int>(){ Model.Id }
	}
} )
*@

@Html.Partial( "~/Views/Search/_ItemListSearch.cshtml" )
<script type="text/javascript">
	var ItemListConfigs = {
		CommonFilters: [
			{ Name: "> BilletTitleId > Job", ItemIds: [ @Model.Id ] }
		],
		Searches: {
			RatingTasks: {
				Header: "Rating Tasks",
				Description: "<p>Rating Tasks associated with this Billet Title.</p>",
				SearchType: "RatingContext",
				StyleType: "RatingTask",
				Fields: [
					{ Label: ItemListSearches.RatingContextLabel, RenderPath: ["Id|RatingContext"], QueryPath: ".Id", IsNumeric: true },
					{ Label: "Rating", RenderPath: ["HasRating|Rating", "CodedNotation|Rating"], QueryPath: "> RatingId > Rating.CodedNotation" },
					{ Label: "Rating Task", RenderPath: ["HasRatingTask|RatingTask", "Description|RatingTask"], QueryPath: "> RatingTaskId > RatingTask.TextFields" },
					{ Label: "Training Gap", RenderPath: ["TrainingGapType|Concept", "Name|Concept"], QueryPath: "> FormalTrainingGapId > Concept.Name", AsPlainText: true }
				]
			},
			ClusterAnalysis: {
				Header: "Cluster Analyses and Rating Tasks",
				Description: "<p>Cluster Analyses associated with the Rating Tasks which are associated with this Billet Title.</p>",
				SearchType: "RatingContext",
				StyleType: "ClusterAnalysis",
				Filters: [
					{ Name: "> ClusterAnalysisId > ClusterAnalysis:NotNull" }
				],
				Fields: [
					{ Label: ItemListSearches.RatingContextLabel, RenderPath: ["Id|RatingContext"], QueryPath: ".Id", IsNumeric: true },
					{ Label: "Cluster Analysis", RenderPath: ["HasClusterAnalysis|ClusterAnalysis", "Id|ClusterAnalysis"], QueryPath: "> ClusterAnalysisId > ClusterAnalysis", IsNumeric: true },
					{ Label: "Rating", RenderPath: ["HasRating|Rating", "CodedNotation|Rating"], QueryPath: "> RatingId > Rating.CodedNotation" },
					{ Label: "Cluster Analysis Title", RenderPath: ["HasClusterAnalysis|ClusterAnalysis", "HasClusterAnalysisTitle|ClusterAnalysisTitle", "Name|ClusterAnalysisTitle"], QueryPath: "> ClusterAnalysisId > ClusterAnalysis > HasClusterAnalysisTitleId > ClusterAnalysisTitle.Name" },
					{ Label: "Rating Task", RenderPath: ["HasRatingTask|RatingTask", "Description|RatingTask"], QueryPath: "> RatingTaskId > RatingTask.TextFields" }
				]
			}
		}
	};
	//

	$(document).ready(function () {
		ItemListSearches.setupItemLists(ItemListConfigs);
	});
	//
</script>
<style type="text/css">
	table[data-styletype='RatingTask'] [data-column='Rating'] { width: 75px; }
	table[data-styletype='RatingTask'] [data-column='Training Gap'] { width: 100px; margin-left: auto; }
	table[data-styletype='ClusterAnalysis'] [data-column='Rating'] { width: 75px; }
	table[data-styletype='ClusterAnalysis'] [data-column='Cluster Analysis'] { width: 150px; }
</style>

<item-list-search name="RatingTasks"></item-list-search>
<item-list-search name="ClusterAnalysis"></item-list-search>
