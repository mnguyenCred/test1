@using Models.Schema;
@using Models.Search;
@using Models.DTO;
@model ClusterAnalysis
@{
	var clusterAnalysisTitle = Factories.ClusterAnalysisTitleManager.GetByRowId( Model.HasClusterAnalysisTitle, true );
	ViewBag.Title = "Cluster Analysis: " + ( clusterAnalysisTitle?.Name ?? "Unknown Title" );
}
@functions {
	string GetConceptLink( Guid conceptRowID )
	{
		return LinkHelper.GetDetailPageLink( Factories.ConceptManager.GetByRowId( conceptRowID ), Url.Content, concept => concept.NameOrCodedNotation() );
	}
	string GetConceptLinkList( List<Guid> conceptRowIDs )
	{
		return LinkHelper.GetDetailPageLinkList( Factories.ConceptManager.GetMultiple( conceptRowIDs ), Url.Content, concept => concept.NameOrCodedNotation(), "<ul><li>", "</li><li>", "</li></ul>" );
	}
}

@Html.Partial( "~/Views/Shared/_DetailBasicInfo.cshtml", new DetailBasicInfoHelper( Model )
{
	TypeLabel = "Cluster Analysis",
	Name = "Cluster Analysis",
	PropertyList = new List<NamedString>()
	{
		new NamedString( "Cluster Analysis Title", clusterAnalysisTitle == null ? null : LinkHelper.GetDetailPageLink( clusterAnalysisTitle, Url.Content, m => m.Name ) ),
		new NamedString( "Rating", LinkHelper.GetDetailPageLink( Factories.RatingManager.GetByRowId( Model.HasRating ), Url.Content, m => m.Name + " (" + m.CodedNotation + ")" ) ),
		new NamedString( "Rating Task", LinkHelper.GetDetailPageLink( Factories.RatingTaskManager.GetByRowId( Model.HasRatingTask, false ), Url.Content, m => m.Description ) ),
		new NamedString( "Billet Title", LinkHelper.GetDetailPageLink( Factories.JobManager.GetByRowId( Model.HasBilletTitle, false ), Url.Content, m => m.Name ) ),
		new NamedString( "Functional Area", LinkHelper.GetDetailPageLink( Factories.WorkRoleManager.GetByRowId( Model.HasWorkRole, false ), Url.Content, m => m.Name ) ),
		new NamedString( "Training Solution Type", GetConceptLink( Model.TrainingSolutionType ) ),
		new NamedString( "Recommended Modality Type", GetConceptLink( Model.RecommendedModalityType ) ),
		new NamedString( "Development Specification Type", GetConceptLink( Model.DevelopmentSpecificationType ) ),
		new NamedString( "Candidate Platform Type(s)", GetConceptLinkList( Model.CandidatePlatformType ) ),
		new NamedString( "CFM Placement Type", GetConceptLinkList( Model.CFMPlacementType ) ),
		new NamedString( "Development Ratio", GetConceptLink( Model.DevelopmentRatioType ) ),
		new NamedString( "Estimated Instructional Time", Model.EstimatedInstructionalTime.ToString() ),
		new NamedString( "Development Time", Model.DevelopmentTime.ToString() ),
		new NamedString( "Priority Placement", Model.PriorityPlacement.ToString() ),
	}
} )

