@using Models.Schema;
@using Models.DTO;
@using Models.Search;
@model ClusterAnalysisTitle
@{
	ViewBag.Title = "Cluster Analysis Title: " + Model.Name;
}

@Html.Partial( "~/Views/Shared/_DetailBasicInfo.cshtml", new DetailBasicInfoHelper( Model )
{
	TypeLabel = "Cluster Analysis Title",
	Name = Model.Name
} )

@Html.Partial( "~/Views/Shared/_RatingTaskCountBySourceTypeTable.cshtml", new List<SearchFilter>()
{
	new SearchFilter()
	{
		Name = "> ClusterAnalysisId > ClusterAnalysis > HasClusterAnalysisTitleId > ClusterAnalysisTitle",
		ItemIds = new List<int>(){ Model.Id }
	}
} )

@Html.Partial( "~/Views/Search/_ItemListSearch.cshtml" )
<script type="text/javascript">
	var ItemListConfigs = {
		CommonFilters: [
			{ Name: "> ClusterAnalysisId > ClusterAnalysis > HasClusterAnalysisTitleId > ClusterAnalysisTitle", ItemIds: [ @Model.Id ] }
		],
		Searches: {
			RatingTasks: {
				Header: "Rating Tasks",
				SearchType: "RatingContext",
				StyleType: "RatingTask",
				Fields: [
					{ Label: "Rating", RenderPath: ["HasRating|Rating", "CodedNotation|Rating"] },
					{ Label: "Cluster Analysis", RenderPath: ["HasClusterAnalysis|ClusterAnalysis", "Id|ClusterAnalysis"] },
					{ Label: "Description", RenderPath: ["HasRatingTask|RatingTask", "Description|RatingTask"] },
					{ Label: "Training Gap", RenderPath: ["TrainingGapType|Concept", "Name|Concept"] }
				]
			}
		}
	};
	//

	$(document).ready(function () {
		ItemListSearches.setupItemLists(ItemListConfigs);
	});
	//
</script>
<style type="text/css">
	table[data-styletype='RatingTask'] [data-column='Rating'] { width: 75px; }
	table[data-styletype='RatingTask'] [data-column='Training Gap'] { width: 100px; margin-left: auto; }
	table[data-styletype='RatingTask'] [data-column='Cluster Analysis'] { width: 125px; }
</style>

<item-list-search name="RatingTasks"></item-list-search>
