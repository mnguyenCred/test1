@using Models.Schema;
@using Models.DTO;
@using Models.Search;
@model Concept
@{
	ViewBag.Title = "Concept: " + Model.Name;
}

@Html.Partial( "~/Views/Shared/_DetailBasicInfo.cshtml", new DetailBasicInfoHelper( Model )
{
	Name = Model.NameOrCodedNotation(),
	PropertyList = new List<NamedString>()
	{
		new NamedString( "In Scheme", LinkHelper.GetDetailPageLink( Factories.ConceptSchemeManager.GetByRowId( Model.InScheme ), Url.Content, m => m.Name ) ),
		new NamedString( "Description", Model.Description ),
		new NamedString( "Work Element Type", Model.WorkElementType ),
		new NamedString( "Code", Model.CodedNotation ),
		new NamedString( "Enabled", Model.IsActive ? "Yes" : "No" ),
		new NamedString( "Broader Concept Connection", LinkHelper.GetDetailPageLink( Factories.ConceptManager.GetByRowId( Model.BroadMatch, true ), Url.Content, m => m.Name ) ),
		new NamedString( "Narrower Concept Connections", LinkHelper.GetDetailPageLinkList( Factories.ConceptManager.GetNarrowerConceptsForConcept( Model.Id ), Url.Content, m => m.Name, "<ul><li>", "</li><li>", "</li></ul>" ) )
	}
} )

@Html.Partial( "~/Views/Shared/_TasksBySourceType.cshtml", new TasksBySourceTypeConfig( "which reference the Concept: " + Model.Name, "with this Concept", new List<SearchFilter>() { 
	new SearchFilter()
	{
		Name = "search:AllConceptPaths",
		ItemIds = new List<int>(){ Model.Id }
	}
} ) )

@*
@Html.Partial( "~/Views/Shared/_RatingTaskCountBySourceTypeTable.cshtml", new List<SearchFilter>()
{
	new SearchFilter()
	{
		Name = "search:AllConceptPaths",
		ItemIds = new List<int>(){ Model.Id }
	}
} )
*@

@Html.Partial( "~/Views/Search/_ItemListSearch.cshtml" )
<script type="text/javascript">
	var ItemListConfigs = {
		CommonFilters: [
			{ Name: "search:AllConceptPaths", ItemIds: [ @Model.Id ] }
		],
		Searches: {
			RatingTasks: {
				Header: "Rating Tasks",
				Description: "<p>Rating Tasks from the entire system which are associated with this Concept.</p>",
				SearchType: "RatingContext",
				StyleType: "RatingTask",
				Fields: [
					{ Label: ItemListSearches.RatingContextLabel, RenderPath: ["Id|RatingContext"], QueryPath: ".Id", IsNumeric: true },
					{ Label: "Rating", RenderPath: ["HasRating|Rating", "CodedNotation|Rating"], QueryPath: "> RatingId > Rating.CodedNotation" },
					{ Label: "Rating Task", RenderPath: ["HasRatingTask|RatingTask", "Description|RatingTask"], QueryPath: "> RatingTaskId > RatingTask.TextFields" },
					{ Label: "Training Gap", RenderPath: ["TrainingGapType|Concept", "Name|Concept"], QueryPath: "> FormalTrainingGapId > Concept.Name", AsPlainText: true }
				]
			}
		}
	};
	//

	$(document).ready(function () {
		ItemListSearches.setupItemLists(ItemListConfigs);
	});
	//
</script>
<style type="text/css">
	table[data-styletype='RatingTask'] [data-column='Rating'] { width: 75px; }
	table[data-styletype='RatingTask'] [data-column='Training Gap'] { width: 100px; margin-left: auto; }
</style>

<item-list-search name="RatingTasks"></item-list-search>
