@using Models.Schema;
@using Models.Search;
@using Models.DTO;
@model ConceptScheme
@{
	ViewBag.Title = "Concept Scheme: " + Model.Name;
}

@Html.Partial( "~/Views/Shared/_DetailBasicInfo.cshtml", new DetailBasicInfoHelper( Model )
{
	TypeLabel = "Concept Scheme",
	Name = Model.Name,
	PropertyList = new List<NamedString>()
	{
		new NamedString( "Description", Model.Description )
	}
} )

<style type="text/css">
	.conceptListHeader { display: flex; align-items: center; }
	.conceptListHeader .newConceptLink { font-size: 14px; margin-left: auto; padding: 0 10px; }
</style>
<div class="section">
	<h3 class="conceptListHeader sectionHeader">Concepts <a class="newConceptLink" href="@Url.Content( "~/Concept/Edit/0?InScheme=" + Model.RowId )">Add New Concept</a></h3>
	<table class="conceptsTable">
		<thead>
			<tr>
				<th style="width: 30%">Name</th>
				<th style="width: 15%">Coded Notation</th>
				<th style="width: 20%">Work Element Type</th>
				<th>Description</th>
			</tr>
		</thead>
		<tbody>
			@foreach ( var item in Model.Concepts?.ToList() ?? new List<Concept>() )
			{
				<tr>
					<td><a href="@Url.Content( "~/Concept/Detail/" + item.Id )">@item.Name</a></td>
					<td>@item.CodedNotation</td>
					<td>@item.WorkElementType</td>
					<td>@item.Description</td>
				</tr>
			}
		</tbody>
	</table>
</div>	

@* //Probably not useful, as every RatingContext would reference every Concept Scheme
@Html.Partial( "~/Views/Shared/_RatingTaskCountBySourceTypeTable.cshtml", new List<SearchFilter>()
{
	new SearchFilter()
	{
		Name = "search:AllConceptSchemePaths",
		ItemIds = new List<int>(){ Model.Id }
	}
} )

@Html.Partial( "~/Views/Search/_ItemListSearch.cshtml" )
<script type="text/javascript">
	var ItemListConfigs = {
		CommonFilters: [
			{ Name: "search:AllConceptPaths", ItemIds: [ @Model.Id ] }
		],
		Searches: {
			RatingTasks: {
				Header: "Rating Tasks",
				SearchType: "RatingContext",
				StyleType: "RatingTask",
				Fields: [
					{ Label: "Rating", RenderPath: ["HasRating|Rating", "CodedNotation|Rating"] },
					{ Label: "Description", RenderPath: ["HasRatingTask|RatingTask", "Description|RatingTask"] },
					{ Label: "Training Gap Type", RenderPath: ["TrainingGapType|Concept", "Name|Concept"] },
				]
			}
		}
	};
	//

	$(document).ready(function () {
		ItemListSearches.setupItemLists(ItemListConfigs);
	});
	//
</script>
<style type="text/css">
	table[data-styletype='RatingTask'] [data-column='Rating'] { width: 75px; }
	table[data-styletype='RatingTask'] [data-column='Training Gap Type'] { width: 150px; }
</style>

<item-list-search name="RatingTasks"></item-list-search>
*@