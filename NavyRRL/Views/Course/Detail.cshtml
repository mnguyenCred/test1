@using Models.Schema;
@using Models.DTO;
@model Course
@{
	ViewBag.Title = "Course: " + Model.Name;
	var courseTypes = Factories.ConceptSchemeManager.GetMultipleConcepts( Model.CourseType );
}

@Html.Partial( "~/Views/Shared/_DetailShared.cshtml" )
@Html.Partial( "~/Views/Shared/_DetailBasicInfo.cshtml", new DetailBasicInfoHelper()
{
	TypeLabel = "Course",
	TypeURL = Model.GetType().Name.ToLower(),
	Id = Model.Id,
	CTID = Model.CTID,
	Name = Model.Name,
	Description = Model.Description,
	Identifiers = new List<NamedString>()
	{
		new NamedValue( "System ID", Model.Id.ToString() ),
		new NamedValue( "CIN", Model.CodedNotation ),
		new NamedValue( "Training Tasks", Model.TrainingTasks.Count.ToString() ),

		new NamedString( "Course Type", String.Join(", ", courseTypes.Select( m => "<a href=\"" + Url.Content( "~/Concept/Detail/" + m.Id ) + "\">" + m.Name + "</a>" ).ToList()) ),
		new NamedString( "CCA", "<a href=\"" + Url.Content( "~/Organization/Detail/" + Model.CurriculumControlAuthorityId ) + "\">" + Model.OrganizationName + "</a>" ),
		new NamedString( "LCCD", "<a href=\"" + Url.Content( "~/Concept/Detail/" + Model.LifeCycleControlDocumentTypeId ) + "\">" + Model.LifeCycleControlDocument + "</a>" ),
		new NamedString( "CTID", Model.CTID ),
			new NamedValue( "Last Updated ", Model.LastUpdated.ToString("yyyy-MM-dd hh:mm") )
	}
} )

@*
@if ( Model.TrainingTasks != null && Model.TrainingTasks.Count() > 0 )
{
	<div class="section">
		<h3 class="sectionHeader">Training Tasks</h3>
		<table class="trainingTasksTable">
			<thead>
				<tr>
					<th style="width: 70%">CTTL/PPP/TCCD Statement</th>
					<th>Course Assessment Approach</th>
				</tr>
			</thead>
			<tbody>
				@foreach ( var item in Model.TrainingTasks.ToList() )
				{
					<tr>
						<td><a href="@Url.Content( "~/TrainingTask/Detail/" + item.Id )">@item.Description</a></td>
						<td>@string.Join( ", ", @item.AssessmentMethods )</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}
*@

@Html.Partial( "~/Views/Search/_ItemListSearch.cshtml" )
<script type="text/javascript">
	var ItemListConfigs = {
		CommonFilters: [
			{ Name: "ceterms:Course", ItemIds: [ @Model.Id ] }
		],
		Searches: {
			TrainingTasks: {
				Header: "Training Tasks",
				Type: "TrainingTask",
				Columns: ["CTTL/PPP/TCCD Statement", "Assessment Approach"],
				Cells: [
					(Result) => { return ItemListSearches.getLink("@Url.Content("~/TrainingTask/Detail/")" + Result.Id, Result.Description); },
					(Result) => { return Result.AssessmentMethods }
				]
			}
		}
	};
	//

	$(document).ready(function () {
		ItemListSearches.setupItemLists(ItemListConfigs);
	});
	//
</script>
<style type="text/css">
	table[data-type='TrainingTask'] [data-column='Assessment Approach'] { width: 200px; }
</style>

<item-list-search name="TrainingTasks"></item-list-search>