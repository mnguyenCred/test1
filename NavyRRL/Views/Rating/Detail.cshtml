@using Models.Schema;
@using Models.DTO;
@using Models.Search;
@model Rating
@{
	ViewBag.Title = "Rating: " + Model.Name;

}
@functions {
	public class TaskCountBySource
	{
		public int SourceID { get; set; }
		public string SourceName { get; set; }
		public int TotalTasks { get; set; }
		public int TasksWithTraining { get { return TotalTasks - TasksWithGaps; } }
		public int TasksWithGaps { get; set; }
	}

	public string GetPercent( int numerator, int denominator, int decimalPlaces = 4, string returnIfZero = "0%" )
	{
		return denominator == 0 ? returnIfZero : ( Math.Round( ( double ) numerator / ( double ) denominator, decimalPlaces ) * 100d + "%" );
	}
}

@Html.Partial( "~/Views/Shared/_DetailBasicInfo.cshtml", new DetailBasicInfoHelper( Model )
{
	Name = Model.Name,
	PropertyList = new List<NamedString>()
	{
		new NamedString( "Description", Model.Description ),
		new NamedString( "Code", Model.CodedNotation )
	}
} )

@Html.Partial( "~/Views/Shared/_RatingTaskCountBySourceTypeTable.cshtml", new List<SearchFilter>()
{
	new SearchFilter()
	{
		Name = "> RatingId > Rating",
		ItemIds = new List<int>(){ Model.Id }
	}
} )

@Html.Partial( "~/Views/Search/_ItemListSearch.cshtml" )
<script type="text/javascript">
	var ItemListConfigs = {
		CommonFilters: [
			{ Name: "> RatingId > Rating", ItemIds: [ @Model.Id ] }
		],
		Searches: {
			RatingTasks: {
				Header: "Rating Tasks",
				SearchType: "RatingContext",
				StyleType: "RatingTask",
				Fields: [
					{ Label: "Rating Context", RenderPath: ["Id|RatingContext"] },
					{ Label: "Rating", RenderPath: ["HasRating|Rating", "CodedNotation|Rating"] },
					//{ Label: "Rating Context", RenderPath: ["Id|RatingContext"] },
					{ Label: "Description", RenderPath: ["HasRatingTask|RatingTask", "Description|RatingTask"] },
					{ Label: "Training Gap", RenderPath: ["TrainingGapType|Concept", "Name|Concept"] },
				]
			},
			ClusterAnalysis: {
				Header: "Cluster Analyses",
				SearchType: "RatingContext",
				StyleType: "ClusterAnalysis",
				Filters: [
					{ Name: "> ClusterAnalysisId > ClusterAnalysis:NotNull" }
				],
				Fields: [
					{ Label: "Rating Context", RenderPath: ["Id|RatingContext"] },
					{ Label: "Rating", RenderPath: ["HasRating|Rating", "CodedNotation|Rating"] },
					{ Label: "Cluster Analysis", RenderPath: ["HasClusterAnalysis|ClusterAnalysis", "Id|ClusterAnalysis"] },
					{ Label: "Cluster Analysis Title", RenderPath: ["HasClusterAnalysis|ClusterAnalysis", "HasClusterAnalysisTitle|ClusterAnalysisTitle", "Name|ClusterAnalysisTitle"] },
					{ Label: "Rating Task", RenderPath: ["HasRatingTask|RatingTask", "Description|RatingTask"] }
				]
			}
		}
	};
	//

	$(document).ready(function () {
		ItemListSearches.setupItemLists(ItemListConfigs);
	});
	//
</script>
<style type="text/css">
	table[data-styletype='RatingTask'] [data-column='Rating'] { width: 75px; }
	table[data-styletype='RatingTask'] [data-column='RatingContext'] { width: 75px; }
	table[data-styletype='RatingTask'] [data-column='Training Gap'] { width: 100px; margin-left: auto; }
	table[data-styletype='ClusterAnalysis'] [data-column='Rating'] { width: 75px; }
	table[data-styletype='ClusterAnalysis'] [data-column='Cluster Analysis'] { width: 150px; }
</style>

<item-list-search name="RatingTasks"></item-list-search>
<item-list-search name="ClusterAnalysis"></item-list-search>
