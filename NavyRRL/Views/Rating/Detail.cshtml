@using Models.Schema;
@using Models.DTO;
@using Models.Search;
@model Rating
@{
	ViewBag.Title = "Rating: " + Model.Name;

}
@functions {
	public class TaskCountBySource
	{
		public int SourceID { get; set; }
		public string SourceName { get; set; }
		public int TotalTasks { get; set; }
		public int TasksWithTraining { get { return TotalTasks - TasksWithGaps; } }
		public int TasksWithGaps { get; set; }
	}

	public string GetPercent( int numerator, int denominator, int decimalPlaces = 4, string returnIfZero = "0%" )
	{
		return denominator == 0 ? returnIfZero : ( Math.Round( ( double ) numerator / ( double ) denominator, decimalPlaces ) * 100d + "%" );
	}
}

@Html.Partial( "~/Views/Shared/_DetailShared.cshtml" )
@Html.Partial( "~/Views/Shared/_DetailBasicInfo.cshtml", new DetailBasicInfoHelper()
{
	TypeLabel = "Rating",
	TypeURL = Model.GetType().Name.ToLower(),
	Id = Model.Id,
	CTID = Model.CTID,
	Name = Model.Name,
	Description = Model.Description, //Should hide this?
	Identifiers = new List<NamedString>()
	{
		new NamedString( "System ID", Model.Id.ToString( )),
		new NamedString( "CTID", Model.CTID ),
		new NamedString( "Code", Model.CodedNotation )
	}
} )

@Html.Partial( "~/Views/Shared/_RatingTaskCountBySourceTypeTable.cshtml", new List<SearchFilter>()
{
	new SearchFilter()
	{
		Name = "navy:Rating",
		ItemIds = new List<int>(){ Model.Id }
	}
} )
