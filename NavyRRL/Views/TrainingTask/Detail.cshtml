@using Models.Schema;
@using Models.Search;
@using Models.DTO;
@model TrainingTask
@{
	ViewBag.Title = "Training Task: " + Model.Description;
}

@Html.Partial( "~/Views/Shared/_DetailBasicInfo.cshtml", new DetailBasicInfoHelper( Model )
{
	TypeLabel = "Training Task",
	Name = "Training Task",
	PropertyList = new List<NamedString>()
	{
		new NamedString( "Description", Model.Description ),
		new NamedString( "Related Reference Resource", LinkHelper.GetDetailPageLink( Factories.ReferenceResourceManager.GetByRowId( Model.HasReferenceResource ), Url.Content, m => m.Name + " (" + m.PublicationDate + ")" ) ),
	}
} )

@Html.Partial( "~/Views/Shared/_RatingTaskCountBySourceTypeTable.cshtml", new List<SearchFilter>()
{
	new SearchFilter()
	{
		Name = "> CourseContextId > CourseContext > HasTrainingTaskId > TrainingTask",
		ItemIds = new List<int>(){ Model.Id }
	}
} )

@Html.Partial( "~/Views/Search/_ItemListSearch.cshtml" )
<script type="text/javascript">
	var ItemListConfigs = {
		CommonFilters: [
			{ Name: "> CourseContextId > CourseContext > HasTrainingTaskId > TrainingTask", ItemIds: [ @Model.Id ] }
		],
		Searches: {
			@*RatingTasks: {
				Header: "Rating Tasks",
				SearchType: "RatingContext",
				StyleType: "RatingTask",
				Fields: [
					{ Label: "Rating", RenderPath: ["HasRating|Rating", "CodedNotation|Rating"] },
					{ Label: "Description", RenderPath: ["HasRatingTask|RatingTask", "Description|RatingTask"] },
					{ Label: "Training Gap", RenderPath: ["TrainingGapType|Concept", "Name|Concept"] },
				]
			},*@
			Courses: {
				Header: "Rating Tasks and Courses",
				SearchType: "RatingContext",
				StyleType: "RatingContext",
				Fields: [
					{ Label: "Rating", RenderPath: ["HasRating|Rating", "CodedNotation|Rating"] },
					{ Label: "Rating Task", RenderPath: ["HasRatingTask|RatingTask", "Description|RatingTask"] },
					{ Label: "Course Code", RenderPath: [ "HasCourseContext|CourseContext", "HasCourse|Course", "CodedNotation|Course" ] },
					//{ Label: "Course", RenderPath: [ "HasCourseContext|CourseContext", "HasCourse|Course", "Name|Course" ], AsPlainText: true },
					{ Label: "Assessment Approach", RenderPath: ["HasCourseContext|CourseContext", "AssessmentMethodType|Concept", "Name|Concept"] },
					{ Label: "Course Context", RenderPath: ["HasCourseContext|CourseContext", "Id|CourseContext"] }
				]
			}
		}
	};
	//

	$(document).ready(function () {
		ItemListSearches.setupItemLists(ItemListConfigs);
	});
	//
</script>
<style type="text/css">
	table[data-styletype='RatingTask'] [data-column='Rating'] { width: 75px; }
	table[data-styletype='RatingTask'] [data-column='Training Gap'] { width: 100px; margin-left: auto; }
	table[data-styletype='RatingContext'] [data-column='Assessment Approach'] a { display: block; }
</style>

@*<item-list-search name="RatingTasks"></item-list-search>*@
<item-list-search name="Courses"></item-list-search>
