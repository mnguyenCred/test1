<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit https://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
	<appSettings>

		<add key="environment" value="sandbox"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="serverName" value="sandbox"   xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="domainName" value="https://sandbox.credentialengine.org/publisher/" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="credentialFinderSite" value="https://sandbox.credentialengine.org/finder/" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="adminKey" value="24-E5-6B-78-02-F9-CE-CD-FB-40-F7-EB-08-56-06-B7"   xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="usingSSL" value="true"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="allowingAllPartnersToPublish" value="false" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="publisherCallbackUrl" value="Account/CE_Login" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>


		<add key="publisherClientToken" value="734eca14-4e5a-454e-ab4c-45aa8931a691"
		 xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="publisherSecretToken" value="fc6dfead-2cbd-4fa6-b8ee-49ca44740f6c" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<!--  -->
		<add key="accountsRoot" value="https://sandbox.credentialengine.org/accounts/" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="accountsRegister" value="https://sandbox.credentialengine.org/accounts/account/register" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<!--<add key="accountsLogin" value="" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>-->
		<add key="accountsLogin" value="https://sandbox.credentialengine.org/accounts/account/login" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="accountsAuthorizeApi" value="https://sandbox.credentialengine.org/accounts/Api/Authorize" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="accountsDashboard" value="https://sandbox.credentialengine.org/accounts/dashboard" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="CEAccountOrganizationsForUserApi" value="https://sandbox.credentialengine.org/accounts/api/GetOrganizationsForUser"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="CEAccountOrganizationStatisticsUpdateApi" value="https://sandbox.credentialengine.org/accounts/api/CEAccountOrganizationStatisticsUpdateApi" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="CEAccountOrganizationByCTID" value="https://sandbox.credentialengine.org/accountsApi/Organization/GetByCTID?ctid={0}&amp;password={1}" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="ceAccountOrganizationByApiKey" value="https://sandbox.credentialengine.org/accountsAPI/Organization/GetByApiKey?apikey={0}&amp;password={1}"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="ceApiKey" value="87d65593-1282-4b08-a2f9-f50b9f254c8a"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="registryAssistantApi" value="https://sandbox.credentialengine.org/assistant/" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="includeMinDataWithReferenceId" value="false" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" />
		<add key="skippingLinkChecking" value="false"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)" />
		<!-- ====================================  CaSS  ============================================ -->
		<add key="usingCassBasedCompetencies" value="true" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="publishingUsingCassBasedCompetencies" value="true"
			 xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<!-- cass dev doesn't have the ce- prefix, so code will need to strip, even for prod -->

		<add key="cassResourceUrlPrefix" value="sandbox." xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="cassGetUrl" value="https://dev.cassproject.org/api/ceasn/schema.cassproject.org.0.3.Framework/https://sandbox.credentialengineregistry.org/resources/ce-{0}" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="cassEditorUrl"
		value="https://sandbox.credentialengine.org/cass-editor/?user=wait&amp;link=true&amp;newObjectEndpoint=https://sandbox.credentialengineregistry.org/resources/ce-&amp;server=https://dev.cassproject.org/api/&amp;ceasnDataFields=true&amp;show=mine" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="conceptSchemeEditorUrl"
		value="https://sandbox.credentialengine.org/cass-editor/?user=wait&amp;link=true&amp;newObjectEndpoint=https://sandbox.credentialengineregistry.org/resources/ce-&amp;server=https://dev.cassproject.org/api/&amp;ceasnDataFields=true&amp;show=mine&amp;concepts=true" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="cassResourceViewerUrl"
		value="https://sandbox.credentialengine.org/cass-editor/index.html?server=https://dev.cassproject.org/api/&amp;ceasnDataFields=true&amp;origin=https://sandbox.credentialengine.org&amp;css=https://apps.credentialengine.org/publisher/Style/CassStyles&amp;frameworkId=https://sandbox.credentialengineregistry.org/resources/{0}" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="cassExportUrl" value="https://dev.cassproject.org/api/ceasn/{0}" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<!-- dev API keys, will need different ones for prod-->
		<!-- ACTUALLY will probably be the same-->
		<add key="goggleClientId" value="1068178611990-ftdrh61bi1p4krh3phf839hid5q5ptut.apps.googleusercontent.com"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="goggleClientSecret" value="UhLDaMF1j9v0u0DXUIbYB3L5"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="sendApprovalIfBySiteStaff" value="true" xdt:Locator="Match(key)"/>
		<add key="approvalCCs" value="" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="doingEmailConfirmation" value="true"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="credentialCacheMinutes" value="0"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="learningOppCacheMinutes" value="0" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<!-- ensure cahe is updated regulary before enabling this-->
		<add key="using_EntityIndexSearch" value="false"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="generateMissingRequiredData" value="false" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<!-- CR related ======================================= -->
		<add key="CEAccountOrganizationsForUserApi" value="https://sandbox.credentialengine.org/accounts/api/GetOrganizationsForUser"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="credentialRegistryUrl" value="https://sandbox.credentialengineregistry.org/"
				 xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="credentialRegistryPublishUrl" value="https://sandbox.credentialengineregistry.org/ce-registry/envelopes?update_if_exists=true"
				 xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="credentialRegistryEnvelopeURL" value="https://sandbox.credentialengineregistry.org/ce-registry/envelopes/{0}"
				 xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="credentialRegistrySearch" value="https://sandbox.credentialengineregistry.org/ce-registry/search"
				 xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="credRegistryResourceUrl" value="https://sandbox.credentialengineregistry.org/resources/"
				 xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="credRegistryGraphUrl" value="https://sandbox.credentialengineregistry.org/graph/"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="skippingValidation" value="no"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="continueOnPublishError" value="yes" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="defaultCommunity" value="ce-registry" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="requestedCommunity" value="" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="emailService" value="mailgun" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<!-- use web service, and ignore others TEMP UNTIL OUR OWN IS SET UP-->
		<add key="SendEmailService" value="" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="SmtpHost" value="" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<!-- sendEmailFlag - use TRUE uppercase to set on -->
		<add key="sendEmailFlag" value="TRUE" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<!-- if yes, will send email to an admin id, overriding an actual email address -->
		<add key="usingTempOverrideEmail" value="no" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<!-- May want a 'to' email specific for the contact US!! -->
		<add key="contactUsMailTo" value="accounts@credentialengine.org" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="contactUsMailFrom" value="SandboxDoNotReply@credentialengine.org" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<!-- Email for system and/or application related messages -->
		<add key="systemAdminEmail" value="mparsons@credentialengine.org" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="systemNotifyFromEmail" value="CEPublisherSandbox@credentialengine.org" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="logAllEmail" value="yes" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<!-- LOG SETTINGS ========================================================================
      Notes:
        - Be sure to give write access to the everyone role for the following log file
    -->
		<add key="logErrors" value="yes" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="notifyOnException" value="yes" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<!--<add key="isDebug" value="TRUE" />-->
		<add key="appTraceLevel" value="6"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

		<add key="path.error.log" value="C:\@logs\sandbox\editor\[date]_ErrorLog.txt" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="path.email.log" value="C:\@logs\sandbox\editor\[date]_EmailLog.txt" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="path.trace.log" value="C:\@logs\sandbox\editor\[date]_TraceLog.txt" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="path.log.file" value="C:\@logs\sandbox\editor\files\[date]_[filename].json" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="path.botTrace.log" value="C:\@logs\sandbox\editor\[date]_botTrace.txt" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

	</appSettings>
	<connectionStrings>
		<!-- add userId and password for user with update access to the database-->
		<add name="DefaultConnection" connectionString="Server=credEngine2;database=NavyRRL;User Id=navyAdmin;password=Xqm7vJVGs%$g;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>


		<add name="navy_RO" connectionString="Server=credEngine2;database=NavyRRL;User Id=navyReader;password=wjSUnH3A%6V6;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200"
				xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>

		<add name="NavyEntities" connectionString="metadata=res://*/Tables.NavyData.csdl|res://*/Tables.NavyData.ssdl|res://*/Tables.NavyData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=credEngine2;initial catalog=NavyRRL;persist security info=True;user id=navyAdmin;password=Xqm7vJVGs%$g;MultipleActiveResultSets=True;App=EntityFramework&quot;"
				 providerName="System.Data.EntityClient" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>

		<add name="NavyViewEntities" connectionString="metadata=res://*/Views.NavyViews.csdl|res://*/Views.NavyViews.ssdl|res://*/Views.NavyViews.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=credEngine2;initial catalog=NavyRRL;persist security info=True;user id=navyAdmin;password=Xqm7vJVGs%$g;multipleactiveresultsets=True;application name=EntityFramework&quot;" providerName="System.Data.EntityClient" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>

	</connectionStrings>
  <system.web>
    <compilation xdt:Transform="RemoveAttributes(debug)" />
    <!--
      In the example below, the "Replace" transform will replace the entire 
      <customErrors> section of your web.config file.
      Note that because there is only one customErrors section under the 
      <system.web> node, there is no need to use the "xdt:Locator" attribute.
      
      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
	  <customErrors mode="RemoteOnly" xdt:Transform="Replace">
		  <error statusCode="404" redirect="~/Home/PageNotFound" />
		  <error statusCode="500" redirect="~/Home/PageNotFound" />
	  </customErrors>

	  <sessionState mode="SQLServer"
		  sqlConnectionString="data source=10.0.0.5;user id=ASPSessionAdmin;password=_Cr$Sess|{}Master;"
		  sqlCommandTimeout="45"
		  cookieless="false"
		  regenerateExpiredSessionId="false"
		  timeout="360"
		  xdt:Transform="Replace"/>
  </system.web>

</configuration>